# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run prettier:check
      - run: npm run lint
      - run: npm test
      - name: Sonar Cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: SonarCloud Scan
        run: >
          npx sonarqube-scanner@3
          -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
          -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - run: npm run build --if-present

  docs:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [ 18.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    if: ${{ github.event.action }} == 'opened'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: Create docs
        run: |
              npm run compodoc:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload documentation repository
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
