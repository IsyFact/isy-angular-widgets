# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check code formatting and linting
        run: |
          npm run prettier:check
          npm run lint
      - name: Run tests
        run: npm test
      - name: Cache SonarCloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Perform SonarCloud scan
        run: >
          npx sonarqube-scanner@3
          -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
          -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
          -Dsonar.exclusions=projects/isy-angular-widgets/schematics/ng-add/index.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build project
        run: npm run build --if-present

  build_and_deploy_demo_and_docs:
    if: ${{ github.event_name == 'push' }}

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build_and_test]
    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Build and prepare documentation for deployment
        run: |
          npm run compodoc:build
          mv docs docs_temp
          mkdir docs
          mv docs_temp docs/documentation
      - name: Build and prepare demo application for deployment
        run: |
          npm run build:widgets_demo
          mv dist/isy-angular-widgets-demo/* docs/
          cp docs/index.html docs/404.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
      - name: Deploy demo and documentation to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Display deployment URLs
        run: |
          echo "Demo URL: https://isyfact.github.io/isy-angular-widgets/"
          echo "Documentation URL: https://isyfact.github.io/isy-angular-widgets/documentation/"
